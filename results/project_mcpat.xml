<?xml version="1.0" ?>
<component id="root" name="root">
  <component id="system" name="system">
    <!--McPAT will skip the components if number is set to 0 -->
    <param name="number_of_cores" value="REPLACE{script.num_cores}"/>
    <param name="number_of_L1Directories" value="0"/>
    <param name="number_of_L2Directories" value="0"/>
    <param name="number_of_L2s" value="1"/> <!-- This number means how many L2 clusters in each cluster there can be multiple banks/ports -->
    <param name="Private_L2" value="0"/><!--1 Private, 0 shared/coherent -->
    <param name="number_of_L3s" value="0"/> <!-- This number means how many L3 clusters -->
    <param name="number_of_NoCs" value="REPLACE{script.num_nocs}"/>
    <param name="homogeneous_cores" value="0"/><!--1 means homo -->
    <param name="homogeneous_L2s" value="1"/>
    <param name="homogeneous_L1Directorys" value="1"/>
    <param name="homogeneous_L2Directorys" value="1"/>
    <param name="homogeneous_L3s" value="1"/>
    <param name="homogeneous_ccs" value="1"/><!--cache coherece hardware -->
    <param name="homogeneous_NoCs" value="1"/>
    <param name="core_tech_node" value="REPLACE{script.technology}"/><!-- nm -->
    <param name="target_core_clockrate" value="REPLACE{1e-6/config.system.clk_domain.clock*1e12}"/><!--MHz -->
    <param name="temperature" value="380"/> <!-- Kelvin -->
    <param name="number_cache_levels" value="2"/>
    <param name="interconnect_projection_type" value="1"/><!--0: agressive wire technology; 1: conservative wire technology -->
    <param name="device_type" value="REPLACE{script.device_type}"/><!--0: HP(High Performance Type); 1: LSTP(Low standby power) 2: LOP (Low Operating Power)  -->
    <param name="longer_channel_device" value="1"/><!-- 0 no use; 1 use when approperiate -->
    <param name="power_gating" value="1"/>
    <param name="machine_bits" value="64"/>
    <param name="virtual_address_width" value="64"/>
    <param name="physical_address_width" value="52"/>
    <param name="virtual_memory_page_size" value="4096"/>
    <!-- address width determins the tag_width in Cache, LSQ and buffers in cache controller 
	 default value is machine_bits, if not set --> 
    <stat name="total_cycles" value="REPLACE{script.numcycles}"/>
    <stat name="idle_cycles" value="REPLACE{script.idlecycles}"/>
    <stat name="busy_cycles"  value="REPLACE{script.numcycles - script.idlecycles}"/>
    <!--This page size(B) is complete different from the page size in Main memo secction. this page size is the size of 
	     virtual memory from OS/Archi perspective; the page size in Main memo secction is the actuall physical line in a DRAM bank  -->
    <!-- *********************** cores ******************* -->
    <INSERT CORES HERE>
    <!-- This block is ignored because number_of_L1Directories = 0 but it still has to be here-->
    <component id="system.L1Directory0" name="L1Directory0">
	<param name="Directory_type" value="0"/>
	<!--0 cam based shadowed tag. 1 directory cache -->	
	<param name="Dir_config" value="4096,2,0,1,100,100, 8"/>
	<!-- the parameters are capacity,block_width, associativity,bank, throughput w.r.t. core clock, latency w.r.t. core clock,-->
	<param name="buffer_sizes" value="8, 8, 8, 8"/>	
	<!-- all the buffer related are optional -->
	<param name="clockrate" value="3400"/>
	<param name="ports" value="1,1,1"/>
	<!-- number of r, w, and rw search ports -->
        <param name="device_type" value="REPLACE{script.device_type}"/>
	<!-- altough there are multiple access types, 
	     Performance simulator needs to cast them into reads or writes
	     e.g. the invalidates can be considered as writes -->
	<stat name="read_accesses" value="800000"/>
	<stat name="write_accesses" value="27276"/>
	<stat name="read_misses" value="1632"/>
	<stat name="write_misses" value="183"/>
	<stat name="conflicts" value="20"/>	
    </component>
    <!-- This block is ignored because number_of_L2Directories = 0 but it still has to be here-->
    <component id="system.L2Directory0" name="L2Directory0">
      <param name="Directory_type" value="0"/>
      <!--0 cam based shadowed tag. 1 directory cache -->	
      <param name="Dir_config" value="512,4,0,1,1, 1"/>
      <!-- the parameters are capacity,block_width, associativity,bank, throughput w.r.t. core clock, latency w.r.t. core clock,-->
      <param name="buffer_sizes" value="16, 16, 16, 16"/>	
      <!-- all the buffer related are optional -->
      <param name="clockrate" value="1200"/>
      <param name="ports" value="1,1,1"/>
      <!-- number of r, w, and rw search ports -->
      <param name="device_type" value="0"/>
      <!-- altough there are multiple access types, 
	   Performance simulator needs to cast them into reads or writes
	   e.g. the invalidates can be considered as writes -->
      <stat name="read_accesses" value="58824"/>
      <stat name="write_accesses" value="27276"/>
      <stat name="read_misses" value="1632"/>
      <stat name="write_misses" value="183"/>
      <stat name="conflicts" value="100"/>
    </component>
    <component id="system.L20" name="L20">
      <!-- all the buffer related are optional -->
      <param name="L2_config" value="REPLACE{config.system.l2.size,config.system.l2.tags.block_size,config.system.l2.assoc,1,1,config.system.l2.hit_latency,config.system.l2.tags.block_size,1}"/>
      <!-- the parameters are capacity,block_width, associativity, bank, throughput w.r.t. core clock, latency w.r.t. core clock,output_width, cache policy -->
      <param name="buffer_sizes" value="REPLACE{config.system.l2.mshrs,config.system.l2.mshrs,config.system.l2.mshrs,config.system.l2.mshrs}"/>
      <!-- cache controller buffer sizes: miss_buffer_size(MSHR),fill_buffer_size,prefetch_buffer_size,wb_buffer_size-->	
      <param name="vdd" value="0"/><!-- 0 means using ITRS default vdd -->	     
      <param name="clockrate" value="REPLACE{1e-6/( config.system.clk_domain.clock * 1e-12)}"/>
      <param name="ports" value="1,1,1"/>
      <!-- number of r, w, and rw ports -->
      <param name="device_type" value="REPLACE{script.device_type}"/>
      <stat name="read_accesses" value="REPLACE{stats.system.l2.demand_accesses::total - stats.system.l2.ReadExReq_accesses::total}"/>
      <stat name="write_accesses" value="REPLACE{stats.system.l2.ReadExReq_accesses::total}"/>
      <stat name="read_misses" value="REPLACE{stats.system.l2.demand_misses::total-stats.system.l2.ReadExReq_misses::total}"/>
      <stat name="write_misses" value="REPLACE{stats.system.l2.ReadExReq_misses::total}"/>
      <stat name="conflicts" value="REPLACE{stats.system.l2.tags.replacements}"/>	
      <stat name="duty_cycle" value="1.0"/>	
    </component>
    
    <!--**********************************************************************-->
    <!-- This block is ignored because number_of_L3s = 0 but you must have it here anyway -->
    <component id="system.L30" name="L30">
      <param name="L3_config" value="16777216,64,16, 16, 16, 100,1"/>
      <!-- the parameters are capacity,block_width, associativity,bank, throughput w.r.t. core clock, latency w.r.t. core clock,-->
      <param name="clockrate" value="850"/>
      <param name="ports" value="1,1,1"/>
      <!-- number of r, w, and rw ports -->
      <param name="device_type" value="0"/>
      <param name="buffer_sizes" value="16, 16, 16, 16"/>
      <!-- cache controller buffer sizes: miss_buffer_size(MSHR),fill_buffer_size,prefetch_buffer_size,wb_buffer_size-->	
      <stat name="read_accesses" value="11824"/>
      <stat name="write_accesses" value="11276"/>
      <stat name="read_misses" value="1632"/>
      <stat name="write_misses" value="183"/>
      <stat name="conflicts" value="0"/>	
      <stat name="duty_cycle" value="1.0"/>	
    </component>
    <!--**********************************************************************-->
    <component id="system.NoC0" name="noc0">
      <param name="clockrate" value="1200"/>
<param name="vdd" value="0"/>
      <param name="type" value="1"/>
      <!--0:bus, 1:NoC , for bus no matter how many nodes sharing the bus
		 at each time only one node can send req -->
      <param name="horizontal_nodes" value="1"/>
      <param name="vertical_nodes" value="1"/>
      <param name="has_global_link" value="1"/>
      <!-- 1 has global link, 0 does not have global link -->
      <param name="link_throughput" value="1"/><!--w.r.t clock -->
      <param name="link_latency" value="1"/><!--w.r.t clock -->
      <!-- througput >= latency -->
      <!-- Router architecture -->
      <param name="input_ports" value="8"/>
      <param name="output_ports" value="7"/>
      <!-- For bus the I/O ports should be 1 -->
      <param name="virtual_channel_per_port" value="2"/>
      <param name="input_buffer_entries_per_vc" value="128"/>
      <param name="flit_bits" value="40"/>
      <param name="chip_coverage" value="1"/>
      <!-- When multiple NOC present, one NOC will cover part of the whole chip. 
	   chip_coverage <=1 -->
	   <param name="link_routing_over_percentage" value="1.0"/>
	   <!-- Links can route over other components or occupy whole area.
		by default, 50% of the NoC global links routes over other 
		components -->
	   <stat name="total_accesses" value="REPLACE{stats.system.l2.demand_accesses::total * 2}"/>
	   <!-- This is the number of total accesses within the whole network not for each router -->
	   <stat name="duty_cycle" value="1"/>
    </component>		
    <!--**********************************************************************-->
    <component id="system.mc" name="mc">
      <!-- Memeory controllers are for DDR(2,3...) DIMMs -->
      <!-- current version of McPAT uses published values for base parameters of memory controller
	   improvments on MC will be added in later versions. -->
      <param name="type" value="REPLACE{script.mctype}"/> <!-- 1: low power; 0 high performance -->
      <param name="mc_clock" value="800"/><!--MHz-->
      <param name="peak_transfer_rate" value="1600"/><!--MB/S-->
      <param name="block_size" value="16"/><!--B-->
      <param name="number_mcs" value="2"/>
      <!-- current McPAT only supports homogeneous memory controllers -->
      <param name="memory_channels_per_mc" value="2"/>
      <param name="number_ranks" value="2"/>
      <param name="witPHY" value="0"/>
      <!-- # of ranks of each channel-->
      <param name="req_window_size_per_channel" value="32"/>
      <param name="IO_buffer_size_per_channel" value="32"/>
      <param name="databus_width" value="32"/>
      <param name="addressbus_width" value="32"/>
      <!-- McPAT will add the control bus width to the addressbus width automatically -->
      <stat name="memory_accesses" value="REPLACE{stats.system.l2.overall_misses::total}"/>
      <stat name="memory_reads" value="REPLACE{stats.system.l2.demand_misses::total}"/>
      <stat name="memory_writes" value="REPLACE{stats.system.l2.ReadExReq_misses::total}"/>
      <!-- McPAT does not track individual mc, instead, it takes the total accesses and calculate 
	   the average power per MC or per channel. This is sufficent for most application. 
	   Further trackdown can be easily added in later versions. -->  			
    </component>
    <!--**********************************************************************-->
    <component id="system.niu" name="niu">
      <!-- On chip 10Gb Ethernet NIC, including XAUI Phy and MAC controller  -->
      <!-- For a minimum IP packet size of 84B at 10Gb/s, a new packet arrives every 67.2ns. 
	   the low bound of clock rate of a 10Gb MAC is 150Mhz -->
      <param name="type" value="REPLACE{script.niutype}"/> <!-- 1: low power; 0 high performance -->
      <param name="clockrate" value="350"/>
      <param name="number_units" value="0"/> <!-- unlike PCIe and memory controllers, each Ethernet controller only have one port -->
      <stat name="duty_cycle" value="1.0"/> <!-- achievable max load lteq 1.0 -->
      <stat name="total_load_perc" value="0.7"/> <!-- ratio of total achived load to total achivable bandwidth  -->
      <!-- McPAT does not track individual nic, instead, it takes the total accesses and calculate 
	   the average power per nic or per channel. This is sufficent for most application. -->  			
    </component>
    <!--**********************************************************************-->
    <component id="system.pcie" name="pcie">
      <!-- On chip PCIe controller, including Phy-->
      <!-- For a minimum PCIe packet size of 84B at 8Gb/s per lane (PCIe 3.0), a new packet arrives every 84ns. 
	   the low bound of clock rate of a PCIe per lane logic is 120Mhz -->
      <param name="type" value="REPLACE{script.pcietype}"/> <!-- 1: low power; 0 high performance -->
      <param name="withPHY" value="1"/>
      <param name="clockrate" value="350"/>
      <param name="number_units" value="0"/>
      <param name="num_channels" value="8"/> <!-- 2 ,4 ,8 ,16 ,32 -->
      <stat name="duty_cycle" value="1.0"/> <!-- achievable max load lteq 1.0 -->
      <stat name="total_load_perc" value="0.7"/> <!-- Percentage of total achived load to total achivable bandwidth  -->
      <!-- McPAT does not track individual pcie controllers, instead, it takes the total accesses and calculate 
	   the average power per pcie controller or per channel. This is sufficent for most application. -->  			
    </component>
    <!--**********************************************************************-->
    <component id="system.flashc" name="flashc">
      <param name="number_flashcs" value="0"/>
      <param name="type" value="REPLACE{script.flashtype}"/> <!-- 1: low power; 0 high performance -->
      <param name="withPHY" value="1"/>
      <param name="peak_transfer_rate" value="200"/><!--Per controller sustainable reak rate MB/S -->
      <stat name="duty_cycle" value="1.0"/> <!-- achievable max load lteq 1.0 -->
      <stat name="total_load_perc" value="0.7"/> <!-- Percentage of total achived load to total achivable bandwidth  -->
      <!-- McPAT does not track individual flash controller, instead, it takes the total accesses and calculate 
	   the average power per fc or per channel. This is sufficent for most application -->  			
    </component>
    <!--**********************************************************************-->

  </component>
</component>
